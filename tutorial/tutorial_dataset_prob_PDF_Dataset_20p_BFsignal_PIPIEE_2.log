
[1mRooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby[0m 
                Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University
                All rights reserved, please read http://roofit.sourceforge.net/license.txt


[1mGammaCombo v1.3 [0m-- All rights reserved under GPLv3, http://www.gnu.org/licenses/gpl.txt

INFO in PDF_Datasets::initData -- Data initialized
intitalising no multipdf. isPdfSet=0 isMultipdfSet=0.
INFO in PDF_Datasets::initPDF -- PDF initialized
[#1] INFO:Minization -- createNLL: caching constraint set under name CONSTR_OF_PDF_mass_model_FOR_OBS_D_M:sample_CLs with 9 entries
[#1] INFO:Minization --  Including the following constraint terms in minimization: (BF_norm_constraint,Eff_Ratio_constraintbrem0_1516_bin2,Eff_Ratio_constraintbrem0_1718_bin2,Eff_Ratio_constraintbrem1_1516_bin2,Eff_Ratio_constraintbrem1_1718_bin2,Y_Norm_constraint_brem0_1516_565-950,Y_Norm_constraint_brem0_1718_565-950,Y_Norm_constraint_brem1_1516_565-950,Y_Norm_constraint_brem1_1718_565-950)
RooAbsTestStatistic::initSimMode: creating slave calculator #0 for state brem0_1516 (54 dataset entries)
[#0] ERROR:Integration --  RooNumIntFactory::Init : libRooFitMore cannot be loaded. GSL integrators will not beavailable ! 
[#1] INFO:NumericIntegration -- RooRealIntegral::init(model_misid_only_bkg_brem0_1516_565-950_Int[D_M]) using numeric integrator RooIntegrator1D to calculate Int(D_M)
[#1] INFO:NumericIntegration -- RooRealIntegral::init(model_leak_only_bkg_brem0_1516_ro_Int[D_M]) using numeric integrator RooIntegrator1D to calculate Int(D_M)
RooAbsTestStatistic::initSimMode: creating slave calculator #1 for state brem0_1718 (140 dataset entries)
[#1] INFO:NumericIntegration -- RooRealIntegral::init(model_misid_only_bkg_brem0_1516_565-950_Int[D_M]) using numeric integrator RooIntegrator1D to calculate Int(D_M)
[#1] INFO:NumericIntegration -- RooRealIntegral::init(model_leak_only_bkg_brem0_1516_ro_Int[D_M]) using numeric integrator RooIntegrator1D to calculate Int(D_M)
RooAbsTestStatistic::initSimMode: creating slave calculator #2 for state brem1_1516 (119 dataset entries)
[#1] INFO:NumericIntegration -- RooRealIntegral::init(model_misid_only_bkg_brem1_1516_565-950_Int[D_M]) using numeric integrator RooIntegrator1D to calculate Int(D_M)
[#1] INFO:NumericIntegration -- RooRealIntegral::init(model_leak_only_bkg_brem1_1516_ro_Int[D_M]) using numeric integrator RooIntegrator1D to calculate Int(D_M)
RooAbsTestStatistic::initSimMode: creating slave calculator #3 for state brem1_1718 (50 dataset entries)
[#1] INFO:NumericIntegration -- RooRealIntegral::init(model_misid_only_bkg_brem1_1516_565-950_Int[D_M]) using numeric integrator RooIntegrator1D to calculate Int(D_M)
[#1] INFO:NumericIntegration -- RooRealIntegral::init(model_leak_only_bkg_brem1_1516_ro_Int[D_M]) using numeric integrator RooIntegrator1D to calculate Int(D_M)
[#1] INFO:Fitting -- RooAbsTestStatistic::initSimMode: created 4 slave calculators.
[#1] INFO:NumericIntegration -- RooRealIntegral::init(model_misid_only_bkg_brem0_1516_565-950_Int[D_M]) using numeric integrator RooIntegrator1D to calculate Int(D_M)
[#1] INFO:NumericIntegration -- RooRealIntegral::init(model_leak_only_bkg_brem0_1516_ro_Int[D_M]) using numeric integrator RooIntegrator1D to calculate Int(D_M)
[#1] INFO:NumericIntegration -- RooRealIntegral::init(model_misid_only_bkg_brem0_1516_565-950_Int[D_M]) using numeric integrator RooIntegrator1D to calculate Int(D_M)
[#1] INFO:NumericIntegration -- RooRealIntegral::init(model_leak_only_bkg_brem0_1516_ro_Int[D_M]) using numeric integrator RooIntegrator1D to calculate Int(D_M)
[#1] INFO:NumericIntegration -- RooRealIntegral::init(model_misid_only_bkg_brem1_1516_565-950_Int[D_M]) using numeric integrator RooIntegrator1D to calculate Int(D_M)
[#1] INFO:NumericIntegration -- RooRealIntegral::init(model_leak_only_bkg_brem1_1516_ro_Int[D_M]) using numeric integrator RooIntegrator1D to calculate Int(D_M)
[#1] INFO:NumericIntegration -- RooRealIntegral::init(model_misid_only_bkg_brem1_1516_565-950_Int[D_M]) using numeric integrator RooIntegrator1D to calculate Int(D_M)
[#1] INFO:NumericIntegration -- RooRealIntegral::init(model_leak_only_bkg_brem1_1516_ro_Int[D_M]) using numeric integrator RooIntegrator1D to calculate Int(D_M)
[#1] INFO:Eval -- RooRealVar::setRange(D_M) new range named 'unblind0' created with bounds [1700,2050]
Start parameter configuration:

  No start parameter file was found, will use the default values
  configured in ParameterAbs class. Start parameter files are searched
  in the following order:
  1. --parfile option
  2. default start paramter file: plots/par/tutorial_dataset_PDF_Dataset_BFsignal_start.dat

=============== Global minimum (2*-Log(Likelihood)) is: 2607.18
=============== Bkg minimum (2*-Log(Likelihood)) is: 2607.72
Scan strategy:
==============

1. perform an initial scan
2. perform an additional scan starting from each solution found

first scan ...
MethodDatasetsProbScan::scan1d_prob() : starting ... with 20 scanpoints...
  5% [==                                                ] 10% [=====                                             ] 15% [=======                                           ] 20% [==========                                        ] 25% [============                                      ] 30% [===============                                   ] 35% [=================                                 ] 40% [====================                              ] 45% [======================                            ] 50% [=========================                         ] 55% [===========================                       ] 60% [==============================                    ] 65% [================================                  ] 70% [===================================               ] 75% [=====================================             ] 80% [========================================          ] 85% [==========================================        ] 90% [=============================================     ] 95% [===============================================   ]100% [==================================================]                                                          Wrote ToyTree to file
analysing toys ...
  5% [==                                                ] 10% [=====                                             ] 15% [=======                                           ] 20% [==========                                        ] 25% [============                                      ] 30% [===============                                   ] 35% [=================                                 ] 40% [====================                              ] 45% [======================                            ] 50% [=========================                         ] 55% [===========================                       ] 60% [==============================                    ] 65% [================================                  ] 70% [===================================               ] 75% [=====================================             ] 80% [========================================          ] 85% [==========================================        ] 90% [=============================================     ] 95% [===============================================   ]100% [==================================================]                                                          Best fit at: scanVar  = 2.39332e-07 with Chi2Min: 2607.18
Scan i: 0

Results:
========

SOLUTION 0:

  combination: PDF_Dataset
  title:       default
  date:        Tue Mar 28 16:31:59 2023
  FCN: 1303.59, EDM: 2.21853e-05
  COV quality: 3, status: 0, confirmed: yes

    Parameter                      FinalValue +/- Error (HESSE)
  ----------------------------   ---------------------------------
                      BF_norm          4e-06 +/-          0 (const)
                BF_norm_sigma          5e-07 +/-          0 (const)
       Eff_Ratio_brem0_1516_bin2       0.901211 +/-          0 (const)
       Eff_Ratio_brem0_1718_bin2        1.13333 +/-          0 (const)
       Eff_Ratio_brem1_1516_bin2       0.730704 +/-          0 (const)
       Eff_Ratio_brem1_1718_bin2        1.22154 +/-          0 (const)
       Eff_Ratio_sigmabrem0_1516_bin2      0.0450605 +/-          0 (const)
       Eff_Ratio_sigmabrem0_1718_bin2      0.0566666 +/-          0 (const)
       Eff_Ratio_sigmabrem1_1516_bin2      0.0365352 +/-          0 (const)
       Eff_Ratio_sigmabrem1_1718_bin2      0.0610769 +/-          0 (const)
       Y_Norm_brem0_1516_565-950        57.4115 +/-          0 (const)
       Y_Norm_brem0_1718_565-950        279.772 +/-          0 (const)
       Y_Norm_brem1_1516_565-950        63.8809 +/-          0 (const)
       Y_Norm_brem1_1718_565-950        549.358 +/-          0 (const)
       Y_Norm_sigma_brem0_1516_565-950        12.3188 +/-          0 (const)
       Y_Norm_sigma_brem0_1718_565-950         25.247 +/-          0 (const)
       Y_Norm_sigma_brem1_1516_565-950        8.63618 +/-          0 (const)
       Y_Norm_sigma_brem1_1718_565-950         28.963 +/-          0 (const)
            alpha_CB1_565-950        1.01739 +/-          0 (const)
             alpha_CB_565-950       0.256186 +/-          0 (const)
                asym1_ro_leak    -0.00321949 +/-          0 (const)
         asym_had_bkg_565-950      -0.227236 +/-          0 (const)
       asym_had_bkg_brem_565-950       0.239088 +/-          0 (const)
                 asym_ro_leak     -0.0615453 +/-          0 (const)
                   c1_565-950    -1.45687e-05 +/-          0 (const)
             c1_brem1_565-950    -0.000299025 +/-          0 (const)
                 frac_565-950       0.544624 +/-          0 (const)
                mean1_565-950        1853.64 +/-          0 (const)
                mean1_ro_leak        1775.58 +/-          0 (const)
                 mean_565-950        1853.22 +/-          0 (const)
         mean_had_bkg_565-950        1827.34 +/-          0 (const)
       mean_had_bkg_brem_565-950        1862.47 +/-          0 (const)
                 mean_ro_leak         1772.6 +/-          0 (const)
                   n1_565-950        99.9998 +/-          0 (const)
                    n_565-950        103.591 +/-          0 (const)
       n_leak_brem0_1516_bin2        2.30071 +/-          0 (const)
       n_leak_brem1_1516_bin2       0.941528 +/-          0 (const)
            ratio_brem1_brem0          0.052 +/-          0 (const)
                rho01_ro_leak              1 +/-          0 (const)
         rho0_had_bkg_565-950      0.0326269 +/-          0 (const)
       rho0_had_bkg_brem_565-950       0.203389 +/-          0 (const)
                 rho0_ro_leak              1 +/-          0 (const)
                rho11_ro_leak      -0.481126 +/-          0 (const)
         rho1_had_bkg_565-950      0.0750246 +/-          0 (const)
       rho1_had_bkg_brem_565-950      0.0958595 +/-          0 (const)
                 rho1_ro_leak      -0.129324 +/-          0 (const)
               sigma1_565-950        20.5081 +/-          0 (const)
               sigma1_ro_leak        34.2672 +/-          0 (const)
               sigma2_565-950        64.5256 +/-          0 (const)
                sigma_565-950        11.7319 +/-          0 (const)
        sigma_had_bkg_565-950        13.8646 +/-          0 (const)
       sigma_had_bkg_brem_565-950        31.5643 +/-          0 (const)
                sigma_ro_leak        31.6931 +/-          0 (const)
     0            BF_norm_obs          4e-06 +/- 4.99133e-07
     1               BFsignal    2.39332e-07 +/- 3.31402e-07
     2 Eff_Ratio_obsbrem0_1516_bin2        0.90121 +/-  0.0450564
     3 Eff_Ratio_obsbrem0_1718_bin2        1.13333 +/-  0.0566597
     4 Eff_Ratio_obsbrem1_1516_bin2       0.730704 +/-  0.0365326
     5 Eff_Ratio_obsbrem1_1718_bin2        1.22154 +/-  0.0610687
     6 Y_Norm_obs_brem0_1516_565-950         57.411 +/-    12.3162
     7 Y_Norm_obs_brem0_1718_565-950        279.772 +/-    25.2414
     8 Y_Norm_obs_brem1_1516_565-950        63.8807 +/-    8.63532
     9 Y_Norm_obs_brem1_1718_565-950        549.358 +/-    28.9579
    10 n_comb_brem0_1516_bin2         59.066 +/-    6.74031
    11 n_comb_brem1_1516_bin2        79.4407 +/-    7.20064
    12 n_misid_brem0_1516_bin2        32.0622 +/-     5.8399

Computing CL values based on test statistic decision
Using 2-sided test statistic
Confidence Intervals for CLs method 1:
CONFIDENCE INTERVALS for combination PDF_Dataset

MethodAbsScan::calcCLintervals(): Low number of scan points. Using linear interpolation.
BFsignal = [-0.00000001, 0.00000087] (0.00000024 -0.00000025 +0.00000063) @0.90CL, DatasetsProb Simplified CL_s

BFsignal = [-0.00000001, 0.00000102] (0.00000024 -0.00000025 +0.00000078) @0.95CL, DatasetsProb Simplified CL_s




Simplified CL_s: 
BFsignal = [  -0.00,    0.00] @0.90CL, DatasetsProb (boundary scan)
Simplified CL_s: 
BFsignal = [  -0.00,    0.00] @0.95CL, DatasetsProb (boundary scan)

saving parameters to: plots/par/tutorial_dataset_PDF_Dataset_BFsignal.dat
MethodDatasetsProbScan::plotFitRes() : WARNING : No background pdf is given. Will plot S+B hypothesis with S=0.
362.738
saving plot (pdf and other formats) to: plots/pdf/tutorial_dataset_BFsignal_cls_fit.pdf
Dataset Scan Done
saving plot (pdf and other formats) to: plots/pdf/tutorial_dataset_BFsignal_cls.pdf

Real time 0:00:01, CP time 1.720
